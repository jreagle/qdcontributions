name: qdContributionsAPI

on:
  workflow_dispatch:

permissions:
    contents: write

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - name: Set matrix data
       id: set-matrix
       run: |
         echo "matrix=$(jq -c . < ./api/ro/codarea.json)" >> $GITHUB_OUTPUT
  matrix:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      max-parallel: 1
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - name: Read JSON File and Store as ENV.VAR
       run: echo "CITY=$(jq -c . < ./api/ro/${{ matrix.codarea }}.json)" >> $GITHUB_ENV
     - name: Edit Json
       shell: bash
       run: |
         repo="repo:okfn-brasil/querido-diario"
         city_name=$(jq -c .city.territory_name < ./api/ro/${{ matrix.codarea }}.json)
         queryCity="$city_name OR ${{ fromJson(env.CITY).city.territory_id  }} OR ${{ fromJson(env.CITY).city.slug }} $repo"
         declare -l uf=${{ fromJson(env.CITY).city.state_code }}
         city_slug=${{ fromJson(env.CITY).city.slug }}
         pathSpider="data_collection/gazette/spiders/$uf/$city_slug.py"
         echo $pathSpider
         echo $queryCity
         echo 'CALL API'
         issuesCity="$(gh api graphql -F q="$queryCity" -f query='
            query($q: String!) {
              search(query: $q, type:ISSUE, first: 50) {
                issueCount
                edges {
                  node {
                    ... on Issue {
                      number
                      title
                      createdAt
                      url
                      state
                    }
                  }
                }
              }
            }
          ' --jq '[.data.search.edges[] | select(.node != {})]')"
          echo $(jq --arg s "$issuesCity" '.github.issues = ($s)' ./api/ro/${{ matrix.codarea }}.json) > ./api/ro/${{ matrix.codarea }}.json  
          echo $issuesCity
          
          pullsCity="$(gh api graphql -F q="$queryCity" -f query='
            query($q: String!) {
              search(query: $q, type:ISSUE, first: 50) {
                issueCount
                edges {
                  node {
                    ... on PullRequest {
                      number
                      title
                      createdAt
                      url
                      state
                    }
                  }
                }
              }
            }
          ' --jq '[.data.search.edges[] | select(.node != {})]')"
          echo $(jq --arg s "$pullsCity" '.github.prs = ($s)' ./api/ro/${{ matrix.codarea }}.json) > ./api/ro/${{ matrix.codarea }}.json  
          echo $pullsCity

          commitsCity="$(gh api graphql -F p="$pathSpider" -f query='
          query ($p: String!) {
            repository(owner: "okfn-brasil", name: "querido-diario") {
              info: ref(qualifiedName: "main") {
                target {
                  ... on Commit {
                    history(path: $p) {
                      nodes {
                        author {
                          name
                          avatarUrl
                        }
                        messageHeadline
                        committedDate
                        authoredDate
                        url
                        oid
                      }
                    }
                  }
                }
              }
            }
          }
          ' --jq '.data.repository.info.target.history.nodes')"
          echo $(jq --arg s "$commitsCity" '.github.commits = ($s)' ./api/ro/${{ matrix.codarea }}.json) > ./api/ro/${{ matrix.codarea }}.json  
          echo $commitsCity
          
          echo $(jq -c .github < ./api/ro/${{ matrix.codarea }}.json)
          if git diff --quiet ./api/ro/${{ matrix.codarea }}.json; then
             echo "No significant changes"
          else 
             echo "There are some significant changes, let's trigger something..."
             git add ./api/ro/${{ matrix.codarea }}.json
             git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
             git config user.name "github-actions[bot]"
             git commit -m "AutoUpdate: From Action Search Changes" ./api/ro/${{ matrix.codarea }}.json
             git log
             git push origin main
          fi

          
       env:
        GH_TOKEN: ${{ github.token }}
     
         

