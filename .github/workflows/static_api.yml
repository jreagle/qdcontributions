name: qdContributionsAPI

on:
  workflow_dispatch:

permissions:
    contents: write

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
       with:
          ref: ${{ github.head_ref }}
     - name: Set matrix data
       id: set-matrix
       run: |
         echo "matrix=$(jq -c . < ./api/ro/codarea.json)" >> $GITHUB_OUTPUT
  matrix:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - name: Read JSON File and Store as ENV.VAR
       run: echo "CITY=$(jq -c . < ./api/ro/${{ matrix.codarea }}.json)" >> $GITHUB_ENV
     - name: Edit Json
       shell: bash
       run: |
         echo MATRIX_ORDER=$(( ${{ strategy.job-index }} + 1 )) >> $GITHUB_ENV
         repo="repo:okfn-brasil/querido-diario"
         city_name=$(jq -c .city.territory_name < ./api/ro/${{ matrix.codarea }}.json)
         queryCity="$city_name OR ${{ fromJson(env.CITY).city.territory_id  }} OR ${{ fromJson(env.CITY).city.slug }} $repo"
         echo $queryCity
         echo 'CALL API'
         searchCity="$(gh api graphql -F q="$queryCity" -f query='
            query($q: String!) {
              search(query: $q, type:ISSUE, first: 50) {
                issueCount
                edges {
                  node {
                    ... on Issue {
                      number
                      title
                      createdAt
                      url
                      state
                    }
                    ... on PullRequest {
                      number
                      title
                      createdAt
                      url
                      state
                    }
                  }
                }
              }
            }
          ' --jq '.data.search')"
          echo $searchCity
          echo $(jq --arg s "$searchCity" '.github.issues = ($s)' ./api/ro/${{ matrix.codarea }}.json) > ./api/ro/${{ matrix.codarea }}.json  
          echo $(jq -c .github < ./api/ro/${{ matrix.codarea }}.json)
          if git diff --quiet ./api/ro/${{ matrix.codarea }}.json; then
             echo "No significant changes"
          else 
             echo "There are some significant changes, let's trigger something..."
             git add ./api/ro/${{ matrix.codarea }}.json
             git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
             git config --local user.name "github-actions[bot]"
             git commit -m "AutoUpdate: From Action Search Changes" ./api/ro/${{ matrix.codarea }}.json
          fi

          
       env:
        GH_TOKEN: ${{ github.token }}

     - name: Conditional Commit & Push Change Files (End Matrix)
       if: env.MATRIX_ORDER == strategy.job-total
       run: |
        
         git log
         
          UPSTREAM=${1:-'@{u}'}
          LOCAL=$(git rev-parse @)
          REMOTE=$(git rev-parse "$UPSTREAM")
          BASE=$(git merge-base @ "$UPSTREAM")
          
          if [ $LOCAL = $REMOTE ]; then
              echo "Up-to-date"
          elif [ $LOCAL = $BASE ]; then
              echo "Need to pull"
          elif [ $REMOTE = $BASE ]; then
              echo "Need to push"
              git push origin main
          else
              echo "Diverged"
          fi
     
         

