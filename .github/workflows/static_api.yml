name: qdContributionsAPI

on:
  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - name: Set matrix data
       id: set-matrix
       run: |
         echo "matrix=$(jq -c . < ./api/ro/codarea.json)" >> $GITHUB_OUTPUT

  print:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - id: city
       run: |
         city=$(jq -c . < ./api/ro/${{ matrix.codarea }}.json)
         city_id=$(jq -c .city.territory_id < ./api/ro/${{ matrix.codarea }}.json)
         city_name=$(jq -c .city.territory_name < ./api/ro/${{ matrix.codarea }}.json)
         city_state=$(jq -c .city.state_code < ./api/ro/${{ matrix.codarea }}.json)
         city_slug=$(jq -c .city.slug < ./api/ro/${{ matrix.codarea }}.json)
         repo=" repo:okfn-brasil/querido-diario"
         qsyntax="'CotriguaÃ§u' OR 5103379 OR mt_cotriguacu repo:okfn-brasil/querido-diario"

     - uses: octokit/graphql-action@v2.x
       id: get_latest_release
       env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
       with:
        variables: |
          q: mt_cotriguacu repo:okfn-brasil/querido-diario
        query: |
            query searchContributions($q: String!) {
              search(query: $q, type:ISSUE, first: 50) {
                codeCount
                issueCount
                edges {
                  node {
                    ... on Issue {
                      number
                      title
                      createdAt
                      url
                      state
                    }
                    ... on PullRequest {
                      number
                      title
                      createdAt
                      url
                      state
                      }
                    }
                  }
                }
              }

         
     - run: "echo 'latest release: ${{ steps.get_latest_release.outputs.data }}'"
     - name: Edit Json
       shell: bash
       run: |
          echo $(jq --arg a "${{ steps.get_latest_release.outputs.data }}" '.cities.level = ($a)' ./api/ro/${{ matrix.codarea }}.json) > ./api/ro/${{ matrix.codarea }}.json  

     - uses: actions/upload-artifact@v3
       with:
          name: my-test-file
          path: ${{ matrix.codarea }}.json

