name: qdContributionsAPI

on:
  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - name: Set matrix data
       id: set-matrix
       run: |
         echo "matrix=$(jq -c . < ./api/ro/codarea.json)" >> $GITHUB_OUTPUT

  print:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - id: city
       run: |
         city=$(jq -c . < ./api/ro/${{ matrix.codarea }}.json)
         city_id=$(jq -c .city.territory_id < ./api/ro/${{ matrix.codarea }}.json)
         city_name=$(jq -c .city.territory_name < ./api/ro/${{ matrix.codarea }}.json)
         city_state=$(jq -c .city.state_code < ./api/ro/${{ matrix.codarea }}.json)
         city_slug=$(jq -c .city.slug < ./api/ro/${{ matrix.codarea }}.json)
         repo=" repo:okfn-brasil/querido-diario"
         qsyntax="'CotriguaÃ§u' OR 5103379 OR mt_cotriguacu repo:okfn-brasil/querido-diario"
         echo $qsyntax
         
     - uses: octokit/graphql-action@v2.x
       id: get_latest_release
       with:
        query: |
          query release($owner:String!,$repo:String!) {
            repository(owner:$owner,name:$repo) {
              releases(first:1) {
                nodes {
                  name
                  createdAt
                  tagName
                  description
                }
              }
            }
          }
        owner: ${{ github.event.repository.owner.name }}
        repo: ${{ github.event.repository.name }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  - run: ${{ steps.get_latest_release.outputs.data }}
