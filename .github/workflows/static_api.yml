name: qdContributionsAPI

on:
  workflow_dispatch:

permissions:
    contents: write

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
       with:
          ref: ${{ github.head_ref }}
     - name: Set matrix data
       id: set-matrix
       run: |
         echo "matrix=$(jq -c . < ./api/ro/codarea.json)" >> $GITHUB_OUTPUT
  matrix:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - name: Read JSON File and Store as ENV.VAR
       run: echo "CITY_JSON=$(jq -c . < ./api/ro/${{ matrix.codarea }}.json)" >> $GITHUB_ENV
     - name: Edit Json
       shell: bash
       run: |
         echo MATRIX_ORDER=$(( ${{ strategy.job-index }} + 1 )) >> $GITHUB_ENV
         city=$(jq -c . < ./api/ro/${{ matrix.codarea }}.json)
         city_id=$(jq -c .city.territory_id < ./api/ro/${{ matrix.codarea }}.json)
         city_name=$(jq -c .city.territory_name < ./api/ro/${{ matrix.codarea }}.json)
         city_state=$(jq -c .city.state_code < ./api/ro/${{ matrix.codarea }}.json)
         city_slug=$(jq -c .city.slug < ./api/ro/${{ matrix.codarea }}.json)
         repo="repo:okfn-brasil/querido-diario"
         queryCity="'${{ fromJson(env.CITY_JSON).name }}' OR ${{ fromJson(env.CITY_JSON).id }} OR ${{ fromJson(env.CITY_JSON).slug }} $repo"
         echo $queryCity
         searchCity="$(gh api graphql -F q=$QCITY -f query='
            query($q: String!) {
              search(query: $q, type:ISSUE, first: 50) {
                codeCount
                issueCount
                edges {
                  node {
                    ... on Issue {
                      number
                      title
                      createdAt
                      url
                      state
                    }
                    ... on PullRequest {
                      number
                      title
                      createdAt
                      url
                      state
                    }
                  }
                }
              }
            }
          ' --jq '.data')"
         echo $searchCity
       env:
        GH_TOKEN: ${{ github.token }}


     
         

